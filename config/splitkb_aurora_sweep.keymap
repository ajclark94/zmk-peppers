/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp ESC>;
        };

        combo_caps {
            bindings = <&caps_word>;
            key-positions = <10 19>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <3 6>;
        };

        combo_under {
            bindings = <&kp UNDER>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
      &kp Q           &kp W  &kp E      &kp R            &kp T        &kp Y        &kp U      &kp I           &kp O            &kp P
&hm LSHFT A  &hm LEFT_ALT S  &kp D      &kp F            &kp G        &kp H        &kp J      &kp K  &hm LEFT_ALT L   &hm LSHFT SEMI
&hm LCTRL Z           &kp X  &kp C      &kp V            &kp B        &kp N        &kp M  &kp COMMA         &kp DOT  &hm LCTRL SLASH
                                    &lt 3 TAB  &lt 1 BACKSPACE  &lt 2 SPACE  &lt 4 ENTER
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &trans  &trans  &trans  &trans  &trans          &kp LEFT             &kp UP              &kp DOWN              &kp RIGHT
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET         &kp LESS_THAN       &kp GREATER_THAN
                        &trans   &none  &trans            &trans
            >;
        };

        SYM {
            bindings = <
       &kp GRAVE          &kp CARET    &kp ASTRK  &kp AMPS  &kp BSLH  &trans  &kp F7  &kp F8  &kp F9  &kp F10
&kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp PERCENT  &kp DLLR  &kp PLUS  &trans  &kp F4  &kp F5  &kp F6  &kp F11
       &kp TILDE           &kp HASH       &kp AT  &kp EXCL  &kp PIPE  &trans  &kp F1  &kp F2  &kp F3  &kp F11
                                                    &trans    &trans   &none  &trans
            >;
        };

        NUM {
            bindings = <
 &trans    &trans         &trans    &trans  &trans        &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&kp INS  &kp HOME    &kp PAGE_UP  &kp LGUI  &trans        &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp PLUS
&kp DEL   &kp END  &kp PAGE_DOWN    &trans  &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
                                     &none  &trans        &trans        &trans
            >;
        };

        BT {
            bindings = <
   &kp LC(LS(GRAVE)) &kp LC(LS(P))  &kp LCTRL  &kp LCTRL  &kp LCTRL  &bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &bt BT_SEL 0  &bt BT_SEL 1
   &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans        &trans        &trans
   &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans        &trans        &trans
                                    &trans     &trans      &trans      &trans
            >;
        };
    };
};
